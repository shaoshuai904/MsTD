package com.ms_td;

import com.ms_td.R;

/**
 * 地图详情
 * 
 * @author shaoshuai
 * 
 */
public class LeMapDes {
	/** 地图方格行 */
	public static final int rows = 22;
	/** 地图方格列 */
	public static final int cols = 13;

	/** 加载地图背景 */
	public static int loadMapBg(int levelNum) {
		switch (levelNum) {
		case 1:
			return R.drawable.map1;
		case 2:
			return R.drawable.map2;
		case 3:
			return R.drawable.map3;
		case 4:
			return R.drawable.map4;
		default:// 默认关卡一
			return R.drawable.map1;
		}
	}

	/** 加载地图布局 */
	public static int[][] loadMapLayout(int levelNum) {
		// -1表示不可放置炮塔， 0 表示可以放置炮塔， 1表示炮塔已经存在
		switch (levelNum) {
		case 1:
			return new int[][] { { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }, };

		case 2:
			return new int[][] { { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 00, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, 00, -1, 00, -1, -1 },
					{ -1, -1, -1, -1, -1, 00, 00, -1, 00, -1, 00, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, 00, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, 00, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, 00, -1, 00, 00, -1, 00, 00, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, 00, -1, 00, -1, 00, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, 00, 00, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, 00, 00, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, 00, -1, -1, -1, 00, 00, 00, -1, 00, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, 00, -1, -1, 00, -1, 00, -1, 00, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, 00, 00, 00, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }, };
		case 3:
			return new int[][] { { -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, 00, -1, 00, -1, -1, -1, -1, -1, -1, 00, -1, 00 },
					{ -1, 00, -1, 00, -1, -1, -1, -1, -1, -1, 00, -1, 00 },
					{ -1, 00, -1, 00, -1, -1, -1, -1, -1, -1, 00, -1, 00 },
					{ -1, 00, -1, 00, 00, -1, -1, -1, -1, 00, 00, -1, 00 },
					{ -1, -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, 00 },
					{ -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, 00, 00, -1, 00, 00, -1, 00, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 00, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }, };
		case 4:
			return new int[][] { { -1, -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, 00, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, 00, 00, 00, 00, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, 00, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, 00, 00, 00, 00, -1, -1 },
					{ -1, -1, -1, -1, 00, 00, -1, 00, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 00, 00, -1, -1 },
					{ -1, -1, 00, 00, 00, 00, -1, 00, -1, 00, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 00, -1, -1, -1 },
					{ -1, 00, 00, 00, 00, 00, -1, 00, 00, 00, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }, };
		default:// 默认关卡一
			return new int[][] { { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, 00, -1, -1, -1, -1, -1, 00, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, 00, -1, 00, -1, -1, -1, -1, -1, -1 },
					{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }, };
		}
	}

}
